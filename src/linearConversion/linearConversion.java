/*
 * Linear conversion programm
 * 02/05/2018
 */

package linearConversion;

/**
 * @author fedie2562
 */
public class linearConversion extends javax.swing.JFrame {

    /**
     * Creates new form linearConversion
     */
    public linearConversion() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        unitSelection = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        initialValueInput = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        inchesOutput = new javax.swing.JLabel();
        centimetresOutput = new javax.swing.JLabel();
        milesOutput = new javax.swing.JLabel();
        kiloOutput = new javax.swing.JLabel();
        yardsOutput = new javax.swing.JLabel();
        feetOutput = new javax.swing.JLabel();
        output = new javax.swing.JLabel();
        convertButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        unitSelection.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Inches", "Centimetres", "Miles", "Kilometres", "Yards", "Feet" }));

        jLabel1.setText("Choose what to unit to convert from");

        jLabel2.setText("Enter the measurement (numbers only)");

        inchesOutput.setText("Inches : ");

        centimetresOutput.setText("Centimetres : ");

        milesOutput.setText("Miles : ");

        kiloOutput.setText("Kilometres : ");

        yardsOutput.setText("Yards : ");

        feetOutput.setText("Feet : ");

        output.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        convertButton.setText("Convert");
        convertButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                convertButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(output, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(initialValueInput)
                            .addComponent(unitSelection, 0, 85, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(centimetresOutput)
                            .addComponent(milesOutput)
                            .addComponent(kiloOutput)
                            .addComponent(yardsOutput)
                            .addComponent(feetOutput))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(inchesOutput)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(convertButton, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(unitSelection, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(initialValueInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addComponent(inchesOutput))
                    .addComponent(convertButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(centimetresOutput)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(milesOutput)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(kiloOutput)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(yardsOutput)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(feetOutput)
                .addGap(18, 18, 18)
                .addComponent(output, javax.swing.GroupLayout.DEFAULT_SIZE, 52, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void convertButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_convertButtonActionPerformed
        if(unitSelection.getSelectedIndex()==0){
            inchesConversion();
        }
        else if(unitSelection.getSelectedIndex()==1){
            centimetreConversion();
        }
        else if(unitSelection.getSelectedIndex()==2){
            mileConversion();
        }
        else if(unitSelection.getSelectedIndex()==3){
            kilometresConversion();
        }
        else if(unitSelection.getSelectedIndex()==4){
            yardConversion();
        }
        else if(unitSelection.getSelectedIndex()==5){
            feetConversion();
        }
    }//GEN-LAST:event_convertButtonActionPerformed

    private void inchesConversion(){
        double inches = Double.parseDouble(initialValueInput.getText());
        inchesOutput.setText("Inches : "+inches);
        centimetresOutput.setText("Centimetres : "+inches*2.54);
        milesOutput.setText("Miles : "+inches*0.0000157828);
        kiloOutput.setText("Kilometres : "+inches*0.0000254);
        yardsOutput.setText("Yards : "+inches*0.027778);
        feetOutput.setText("Feet : "+inches*0.08333);
    }
    private void centimetreConversion(){
        double centimetres = Double.parseDouble(initialValueInput.getText());
        inchesOutput.setText("Inches : "+centimetres*0.3937);
        centimetresOutput.setText("Centimetres : "+centimetres);
        milesOutput.setText("Miles : "+centimetres*0.00000621371);
        kiloOutput.setText("Kilometres : "+Math.pow(centimetres,-5));
        yardsOutput.setText("Yards : "+centimetres*0.0109361);
        feetOutput.setText("Feet : "+centimetres*0.03280);
    }
    private void mileConversion(){
        double miles = Double.parseDouble(initialValueInput.getText());
        inchesOutput.setText("Inches : "+miles*63360);
        centimetresOutput.setText("Centimetres : "+miles*160934);
        milesOutput.setText("Miles : "+miles);
        kiloOutput.setText("Kilometres : "+miles*1.60934);
        yardsOutput.setText("Yards : "+miles*1760);
        feetOutput.setText("Feet : "+miles*5280);
    }
    private void kilometresConversion(){
        double kilometres = Double.parseDouble(initialValueInput.getText());
        inchesOutput.setText("Inches : "+kilometres*39370.07874);
        centimetresOutput.setText("Centimetres : "+kilometres*100000);
        milesOutput.setText("Miles : "+kilometres*0.621371);
        kiloOutput.setText("Kilometres : "+kilometres);
        yardsOutput.setText("Yards : "+kilometres*1093.61);
        feetOutput.setText("Feet : "+kilometres*3280.84);
    }
    private void yardConversion(){
        double yards = Double.parseDouble(initialValueInput.getText());
        inchesOutput.setText("Inches : "+yards*36);
        centimetresOutput.setText("Centimetres : "+yards*91.44);
        milesOutput.setText("Miles : "+yards*0.000568182);
        kiloOutput.setText("Kilometres : "+yards*0.0009144);
        yardsOutput.setText("Yards : "+yards);
        feetOutput.setText("Feet : "+yards*3);
    }
    private void feetConversion(){
        double feet = Double.parseDouble(initialValueInput.getText());
        inchesOutput.setText("Inches : "+feet*12);
        centimetresOutput.setText("Centimetres : "+feet*30.48);
        milesOutput.setText("Miles : "+feet*0.000189394);
        kiloOutput.setText("Kilometres : "+feet*0.0003048);
        yardsOutput.setText("Yards : "+feet*0.333333);
        feetOutput.setText("Feet : "+feet);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(linearConversion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(linearConversion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(linearConversion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(linearConversion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new linearConversion().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel centimetresOutput;
    private javax.swing.JButton convertButton;
    private javax.swing.JLabel feetOutput;
    private javax.swing.JLabel inchesOutput;
    private javax.swing.JTextField initialValueInput;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel kiloOutput;
    private javax.swing.JLabel milesOutput;
    private javax.swing.JLabel output;
    private javax.swing.JComboBox unitSelection;
    private javax.swing.JLabel yardsOutput;
    // End of variables declaration//GEN-END:variables
}
